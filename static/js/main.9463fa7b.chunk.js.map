{"version":3,"sources":["Components/CreateTask.js","Components/TaskItem.js","Components/TaskList.js","Components/Main.js","App.js","index.js"],"names":["CreateTask","props","state","task","handleSubmit","bind","handleChange","evt","this","setState","target","value","preventDefault","createTask","onSubmit","type","onChange","className","Component","TaskItem","taskItem","taskName","isEditing","deleteTask","setIsEditing","toggleTask","index","set","editTask","colSpan","style","float","onClick","readOnly","checked","isCompleted","TaskList","tasks","map","x","v4","Main","allTasks","localStorage","getItem","JSON","parse","trim","newTask","newAllTask","setItem","stringify","alert","filter","t","ind","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9463fa7b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./CreateTask.css\";\r\n\r\nexport default class CreateTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task: \"\" };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({ task: evt.target.value });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.props.createTask(this.state.task);\r\n    this.setState({ task: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.task}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"add\">Add Task</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TaskItem.css\";\r\n\r\nexport default class TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task: this.props.taskItem.taskName, isEditing: false };\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setIsEditing = this.setIsEditing.bind(this);\r\n    this.toggleTask = this.toggleTask.bind(this);\r\n  }\r\n\r\n  deleteTask() {\r\n    this.props.deleteTask(this.props.index);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({ task: evt.target.value });\r\n  }\r\n\r\n  setIsEditing(set) {\r\n    this.setState({ isEditing: set });\r\n  }\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.props.editTask(this.props.index, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  }\r\n\r\n  toggleTask() {\r\n    this.props.toggleTask(this.props.index);\r\n  }\r\n\r\n  render() {\r\n    let result;\r\n\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <tr>\r\n          <td colSpan=\"2\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.task}\r\n                onChange={this.handleChange}\r\n              ></input>\r\n              <span style={{ float: \"right\" }}>\r\n                <button className=\"save task\">Save</button>\r\n                <button\r\n                  className=\"back task\"\r\n                  onChange={() => this.setIsEditing(false)}\r\n                >\r\n                  Back\r\n                </button>\r\n              </span>\r\n            </form>\r\n          </td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      result = (\r\n        <tr>\r\n          <td onClick={this.toggleTask} className=\"task\">\r\n            <input\r\n              type=\"checkbox\"\r\n              readOnly\r\n              checked={this.props.taskItem.isCompleted}\r\n            />\r\n            <span\r\n              className={\r\n                this.props.taskItem.isCompleted ? \"completed\" : \"not-completed\"\r\n              }\r\n            >\r\n              {this.props.taskItem.taskName}\r\n            </span>\r\n          </td>\r\n          <td className=\"Actions\">\r\n            <button\r\n              className=\"edit task\"\r\n              onClick={() => this.setIsEditing(true)}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button className=\"delete task\" onClick={() => this.deleteTask()}>\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport \"./TaskList.css\";\r\n\r\nexport default class TaskList extends Component {\r\n  render() {\r\n    return (\r\n      <table className=\"TodoList\">\r\n        <thead>\r\n          <tr>\r\n            <th>Task</th>\r\n            <th className=\"Actions\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((x, index) => {\r\n            return (\r\n              <TaskItem\r\n                key={v4()}\r\n                taskItem={x}\r\n                index={index}\r\n                deleteTask={this.props.deleteTask}\r\n                editTask={this.props.editTask}\r\n                toggleTask={this.props.toggleTask}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"./Main.css\";\r\n\r\nexport default class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let allTasks = localStorage.getItem(\"tasks\");\r\n\r\n    if (allTasks === null) allTasks = [];\r\n    else allTasks = JSON.parse(allTasks);\r\n\r\n    this.state = { tasks: allTasks };\r\n    this.createTask = this.createTask.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.editTask = this.editTask.bind(this);\r\n    this.toggleTask = this.toggleTask.bind(this);\r\n  }\r\n\r\n  createTask(task) {\r\n    if (task.trim() === \"\") {\r\n      alert(\"Empty Task cannot be added!!!\");\r\n      return;\r\n    }\r\n    let newTask = { taskName: task.trim(), isCompleted: false };\r\n    let newAllTask = [...this.state.tasks, newTask];\r\n    this.setState({ tasks: newAllTask }, () => {\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n\r\n  deleteTask(index) {\r\n    let newTask = this.state.tasks.filter((t, ind) => ind !== index);\r\n    this.setState({ tasks: newTask }, () => {\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n\r\n  editTask(index, taskName) {\r\n    let newTask = [...this.state.tasks];\r\n    newTask[index].taskName = taskName;\r\n    this.setState({ tasks: newTask }, () => {\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n\r\n  toggleTask(index) {\r\n    let newTask = [...this.state.tasks];\r\n    newTask[index].isCompleted = !newTask[index].isCompleted;\r\n    this.setState({ tasks: newTask }, () => {\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Main\">\r\n        <h1>TodoList</h1>\r\n        <div className=\"content\">\r\n          <CreateTask createTask={this.createTask} />\r\n          <br />\r\n          <TaskList\r\n            tasks={this.state.tasks}\r\n            deleteTask={this.deleteTask}\r\n            editTask={this.editTask}\r\n            toggleTask={this.toggleTask}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Main from \"./Components/Main\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}